---
import Tag from '@/components/ui/Tag.astro'
import type { CollectionEntry } from 'astro:content'

interface Props {
  posts: CollectionEntry<'posts'>[]
}

const { posts } = Astro.props

// Calculate tag counts
const tagCounts = new Map<string, number>()

posts.forEach((post) => {
  if (post.data.tags && Array.isArray(post.data.tags)) {
    post.data.tags.forEach((tag: string) => {
      tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1)
    })
  }
})

// Sort tags alphabetically
const sortedTags = Array.from(tagCounts.entries()).sort((a, b) => a[0].localeCompare(b[0]))
---

{
  sortedTags.length > 0 && (
    <div class="tag-cloud">
      <div class="tags">
        {sortedTags.map(([tag, count]) => (
          <Tag tag={tag} count={count} />
        ))}
      </div>
    </div>
  )
}

<style>
  .tag-cloud {
    margin-top: 2rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border);
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    row-gap: 0;
    align-items: center;
  }
</style>
